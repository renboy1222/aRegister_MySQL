/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.aldrin.aregister.gui.dialog;

import com.aldrin.aregister.dao.impl.ClassOfferDAOImpl;
import com.aldrin.aregister.dao.impl.InstructorDAOImpl;
import com.aldrin.aregister.dao.impl.SchoolYearDAOImpl;
import com.aldrin.aregister.gui.JFrameRegister;
import com.aldrin.aregister.gui.dialog.au.JDialogClassOfferAU;
import com.aldrin.aregister.gui.dialog.report.JDialogReportClassOffer;
import com.aldrin.aregister.model.ClassOffer;
import com.aldrin.aregister.model.Course;
import com.aldrin.aregister.model.Day;
import com.aldrin.aregister.model.Instructor;
import com.aldrin.aregister.model.Room;
import com.aldrin.aregister.model.SchoolYear;
import com.aldrin.aregister.model.Subject;
import com.aldrin.aregister.model.Time;
import com.aldrin.aregister.util.ComboBoxList;
import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ALDRIN B. C.
 */
public class JDialogClassOffer extends javax.swing.JDialog implements MouseListener, ActionListener {

    /**
     * Creates new form JDialogCourse
     */
    private JFrameRegister jFrameRegister;
    private ClassOffer classOffer;
    private Instructor instructor = new Instructor();
    private InstructorDAOImpl instructorDAOImpl = new InstructorDAOImpl();

    public JDialogClassOffer(JFrameRegister jFrameRegister, boolean modal) {
        super(jFrameRegister, modal);
        this.jFrameRegister = jFrameRegister;
        initComponents();
        setTable();
        
        jTextFieldSearch.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Search");
        //icon
        jTextFieldSearch.putClientProperty(FlatClientProperties.TEXT_FIELD_LEADING_ICON, new FlatSVGIcon("svg/search.svg", 24, 24));
        jButtonDelete.setEnabled(false);
        jButtonUpdate.setEnabled(false);
        comboBoxSchoolYear();

        jComboBoxSchoolYear.addActionListener(this);
        ComboBoxList syId = (ComboBoxList) this.jComboBoxSchoolYear.getSelectedItem();
        selectClassOffer(syId.getId());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClassOffer = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButtonUpdate1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButtonNew = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxSchoolYear = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jTextFieldSearch = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CLASS OFFER");

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout());

        jTableClassOffer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableClassOffer);

        jPanel5.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel6.setPreferredSize(new java.awt.Dimension(10, 425));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 477, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel6, java.awt.BorderLayout.WEST);

        jPanel7.setPreferredSize(new java.awt.Dimension(10, 425));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 477, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel7, java.awt.BorderLayout.EAST);

        jPanel11.setPreferredSize(new java.awt.Dimension(500, 60));
        jPanel11.setLayout(new java.awt.BorderLayout());

        jPanel8.setPreferredSize(new java.awt.Dimension(886, 50));
        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 5));

        jButtonUpdate1.setIcon(new FlatSVGIcon("svg/view_report.svg",32,32));
        jButtonUpdate1.setText("<html><center>Preview<br>Report</center></html>");
        jButtonUpdate1.setMargin(new java.awt.Insets(2, 2, 3, 2));
        jButtonUpdate1.setPreferredSize(new java.awt.Dimension(90, 42));
        jButtonUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdate1ActionPerformed(evt);
            }
        });
        jPanel8.add(jButtonUpdate1);

        jPanel11.add(jPanel8, java.awt.BorderLayout.EAST);

        jPanel3.setPreferredSize(new java.awt.Dimension(480, 32));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jButtonNew.setIcon(new FlatSVGIcon("svg/add.svg",24,24));
        jButtonNew.setText("Add");
        jButtonNew.setMargin(new java.awt.Insets(2, 2, 3, 2));
        jButtonNew.setMaximumSize(new java.awt.Dimension(90, 42));
        jButtonNew.setMinimumSize(new java.awt.Dimension(90, 42));
        jButtonNew.setPreferredSize(new java.awt.Dimension(90, 42));
        jButtonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonNew);

        jButtonUpdate.setIcon(new FlatSVGIcon("svg/edit.svg",24,24));
        jButtonUpdate.setText("Update");
        jButtonUpdate.setMargin(new java.awt.Insets(2, 2, 3, 2));
        jButtonUpdate.setMaximumSize(new java.awt.Dimension(90, 42));
        jButtonUpdate.setMinimumSize(new java.awt.Dimension(90, 42));
        jButtonUpdate.setPreferredSize(new java.awt.Dimension(90, 42));
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonUpdate);

        jButtonDelete.setIcon(new FlatSVGIcon("svg/delete.svg",24,24));
        jButtonDelete.setText("Delete");
        jButtonDelete.setMargin(new java.awt.Insets(2, 2, 3, 2));
        jButtonDelete.setMaximumSize(new java.awt.Dimension(90, 42));
        jButtonDelete.setMinimumSize(new java.awt.Dimension(90, 42));
        jButtonDelete.setPreferredSize(new java.awt.Dimension(90, 42));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonDelete);

        jPanel11.add(jPanel3, java.awt.BorderLayout.WEST);

        jPanel1.add(jPanel11, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setPreferredSize(new java.awt.Dimension(886, 60));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel9.setLayout(new java.awt.BorderLayout());

        jPanel10.setPreferredSize(new java.awt.Dimension(1329, 42));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("SCHOOL YEAR:");
        jPanel10.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 6, 85, 30));
        jPanel10.add(jComboBoxSchoolYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 2, 330, 30));

        jPanel9.add(jPanel10, java.awt.BorderLayout.CENTER);

        jPanel4.setPreferredSize(new java.awt.Dimension(300, 50));
        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 10, 3));

        jTextFieldSearch.setPreferredSize(new java.awt.Dimension(250, 32));
        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });
        jPanel4.add(jTextFieldSearch);

        jPanel9.add(jPanel4, java.awt.BorderLayout.EAST);

        jPanel12.setPreferredSize(new java.awt.Dimension(1329, 20));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1263, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jPanel9.add(jPanel12, java.awt.BorderLayout.NORTH);

        jPanel2.add(jPanel9, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        setSize(new java.awt.Dimension(1279, 605));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewActionPerformed
        JDialogClassOfferAU classOfferAU = new JDialogClassOfferAU(jFrameRegister, true);
        classOfferAU.setVisible(true);
        ComboBoxList syId = (ComboBoxList) this.jComboBoxSchoolYear.getSelectedItem();
        selectClassOffer(syId.getId());
    }//GEN-LAST:event_jButtonNewActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        JDialogClassOfferAU classOffer = new JDialogClassOfferAU(jFrameRegister, true, this.classOffer, "Update");
        classOffer.setVisible(true);
        ComboBoxList syId = (ComboBoxList) this.jComboBoxSchoolYear.getSelectedItem();
        selectClassOffer(syId.getId());
        jButtonDelete.setEnabled(false);
        jButtonUpdate.setEnabled(false);
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        JDialogClassOfferAU classOffer = new JDialogClassOfferAU(jFrameRegister, true, "Delete", this.classOffer);
        classOffer.setVisible(true);
        jButtonDelete.setEnabled(false);
        jButtonUpdate.setEnabled(false);
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTextFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyReleased
        String text = jTextFieldSearch.getText().trim();
        if (text.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text + ",*"));
        }
    }//GEN-LAST:event_jTextFieldSearchKeyReleased

    private void jButtonUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdate1ActionPerformed
        JDialogReportClassOffer classOffer = new JDialogReportClassOffer(jFrameRegister, true);
        classOffer.setVisible(true);
    }//GEN-LAST:event_jButtonUpdate1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonNew;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JButton jButtonUpdate1;
    private javax.swing.JComboBox<Object> jComboBoxSchoolYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableClassOffer;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables

    DefaultTableModel tableModel = new DefaultTableModel(new Object[]{"ID", "SY_ID", "SUBJECT_ID", "INSTRUCTOR_ID", "COURSE_ID", "ROOM_ID", "DAY_ID", "TIME", "CLASS CODE", "SUBJECT", "UNIT", "INSTRUCTOR", "ROOM", "DAY", "TIME", "COURSE"}, 0);

    private TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tableModel);

    private void setTable() {
        jTableClassOffer.setCellSelectionEnabled(true);
        jTableClassOffer = new JTable(tableModel);
        jScrollPane1.setViewportView(jTableClassOffer);
        jTableClassOffer.addMouseListener(this);
        jTableClassOffer.setRowSorter(sorter);

        TableColumn[] column = new TableColumn[100];
        column[8] = jTableClassOffer.getColumnModel().getColumn(8);
        column[8].setPreferredWidth(80);

        column[9] = jTableClassOffer.getColumnModel().getColumn(9);
        column[9].setPreferredWidth(380);

        column[10] = jTableClassOffer.getColumnModel().getColumn(10);
        column[10].setPreferredWidth(40);

        column[11] = jTableClassOffer.getColumnModel().getColumn(11);
        column[11].setPreferredWidth(240);

        column[12] = jTableClassOffer.getColumnModel().getColumn(12);
        column[12].setPreferredWidth(40);
        column[13] = jTableClassOffer.getColumnModel().getColumn(13);
        column[13].setPreferredWidth(40);
        column[14] = jTableClassOffer.getColumnModel().getColumn(14);
        column[14].setPreferredWidth(80);
        column[15] = jTableClassOffer.getColumnModel().getColumn(15);
        column[15].setPreferredWidth(180);

        TableColumn hide0 = jTableClassOffer.getColumnModel().getColumn(0);
        hide0.setMinWidth(0);
        hide0.setMaxWidth(0);
        hide0.setPreferredWidth(0);

        TableColumn hide1 = jTableClassOffer.getColumnModel().getColumn(1);
        hide1.setMinWidth(0);
        hide1.setMaxWidth(0);
        hide1.setPreferredWidth(0);

        TableColumn hide2 = jTableClassOffer.getColumnModel().getColumn(2);
        hide2.setMinWidth(0);
        hide2.setMaxWidth(0);
        hide2.setPreferredWidth(0);

        TableColumn hide3 = jTableClassOffer.getColumnModel().getColumn(3);
        hide3.setMinWidth(0);
        hide3.setMaxWidth(0);
        hide3.setPreferredWidth(0);

        TableColumn hide4 = jTableClassOffer.getColumnModel().getColumn(4);
        hide4.setMinWidth(0);
        hide4.setMaxWidth(0);
        hide4.setPreferredWidth(0);

        TableColumn hide5 = jTableClassOffer.getColumnModel().getColumn(5);
        hide5.setMinWidth(0);
        hide5.setMaxWidth(0);
        hide5.setPreferredWidth(0);

        TableColumn hide6 = jTableClassOffer.getColumnModel().getColumn(6);
        hide6.setMinWidth(0);
        hide6.setMaxWidth(0);
        hide6.setPreferredWidth(0);

        TableColumn hide7 = jTableClassOffer.getColumnModel().getColumn(7);
        hide7.setMinWidth(0);
        hide7.setMaxWidth(0);
        hide7.setPreferredWidth(0);

    }

    private ClassOfferDAOImpl classOfferDAOImpl = new ClassOfferDAOImpl();
    private ArrayList<ClassOffer> classOfferList;

    private void selectClassOffer(Long syId) {
// "ID", "SY_ID", "SUBJECT_ID","INSTRUCTOR_ID","COURSE_ID","ROOM_ID","DAY_ID","TIME","CLASS CODE","SUBJECT","UNIT","INSTRUCTOR","ROOM","DAY","TIME"
        tableModel.setRowCount(0);
        classOfferList = classOfferDAOImpl.selectClassOffer(syId);
        tableModel.setRowCount(0);
        for (ClassOffer co : classOfferList) {
            String instructor = co.getInstructor().getSurname() + ", " + co.getInstructor().getFirstname() + " " + co.getInstructor().getMiddlename().substring(0, 1);
            tableModel.addRow(new Object[]{co.getId(), co.getSchoolYear().getId(), co.getSubject().getId(), co.getInstructor().getId(), co.getCourse().getId(),
                co.getRoom().getId(), co.getDay().getId(), co.getTime().getId(), co.getClass_code(), co.getSubject().getSubject(), co.getSubject().getUnit(),
                instructor, co.getRoom().getRoom(), co.getDay().getDay(), co.getTime().getTime(), co.getCourse().getCourse()});
        }

    }

    @Override
    public void mouseClicked(MouseEvent e) {
        if (e.getSource() == jTableClassOffer) {
            if (e.getButton() == MouseEvent.BUTTON1) {
                if (e.getClickCount() == 1) {
                    int row = jTableClassOffer.getSelectedRow();
                    if (row != -1) {
// "ID", "SY_ID", "SUBJECT_ID","INSTRUCTOR_ID","COURSE_ID","ROOM_ID","DAY_ID","TIME","CLASS CODE","SUBJECT","UNIT","INSTRUCTOR","ROOM","DAY","TIME"
                        ClassOffer classOffer = new ClassOffer();
                        Long id = Long.parseLong(jTableClassOffer.getValueAt(row, 0).toString());
                        Long syId = Long.parseLong(jTableClassOffer.getValueAt(row, 1).toString());
                        Long subjectId = Long.parseLong(jTableClassOffer.getValueAt(row, 2).toString());
                        Long instructorId = Long.parseLong(jTableClassOffer.getValueAt(row, 3).toString());
                        Long courseId = Long.parseLong(jTableClassOffer.getValueAt(row, 4).toString());
                        Long roomId = Long.parseLong(jTableClassOffer.getValueAt(row, 5).toString());
                        Long dayId = Long.parseLong(jTableClassOffer.getValueAt(row, 6).toString());
                        Long timeId = Long.parseLong(jTableClassOffer.getValueAt(row, 7).toString());
                        String classCode = jTableClassOffer.getValueAt(row, 8).toString();
                        SchoolYear sy = new SchoolYear();
                        sy.setId(syId);
                        Subject subject = new Subject();
                        subject.setId(subjectId);
                        Instructor instructor = new Instructor();
                        instructor.setId(instructorId);
                        Course course = new Course();
                        course.setId(courseId);
                        Room room = new Room();
                        room.setId(roomId);
                        Day day = new Day();
                        day.setId(dayId);
                        Time time = new Time();
                        time.setId(timeId);
                        instructor = instructorDAOImpl.findPhotoByInstructorId(instructor);
                        instructor.setPhoto(instructor.getPhoto());
                        classOffer.setId(id);
                        classOffer.setClass_code(classCode);
                        classOffer.setSchoolYear(sy);
                        classOffer.setSubject(subject);
                        classOffer.setInstructor(instructor);
                        classOffer.setCourse(course);
                        classOffer.setRoom(room);
                        classOffer.setDay(day);
                        classOffer.setTime(time);
                        this.classOffer = classOffer;
                        jButtonDelete.setEnabled(true);
                        jButtonUpdate.setEnabled(true);
                    }
                }
            }
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }

    private SchoolYearDAOImpl schoolYearDAOImpl = new SchoolYearDAOImpl();

    private void comboBoxSchoolYear() {
        schoolYearDAOImpl.comboBoxSchoolYear();
        jComboBoxSchoolYear.removeAllItems();
        for (ComboBoxList a : schoolYearDAOImpl.getList()) {
            this.jComboBoxSchoolYear.addItem(a);
        }
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        try {
            if (e.getSource() == jComboBoxSchoolYear) {
                ComboBoxList syId = (ComboBoxList) this.jComboBoxSchoolYear.getSelectedItem();
                selectClassOffer(syId.getId());
            }
        } catch (Exception ex) {

        }
    }
}
